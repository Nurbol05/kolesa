version: "3.8"

services:
  postgres:
    image: postgres:13
    container_name: kolesa_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kolesa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d kolesa" ] # -d kolesa қосымша база атын тексереді
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s # Контейнер іске қосылғаннан кейін 10 секунд күтеді

  postgres_test:
    image: postgres:13
    container_name: kolesa_postgres_test
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kolesa_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d kolesa_test" ] # тест базасының атын көрсетіңіз
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s # Контейнер іске қосылғаннан кейін 10 секунд күтеді

  app:
    build: .
    container_name: kolesa_app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: kolesa
      DB_PORT: 5432
      JWT_SECRET: "NURBOL"
    depends_on:
      postgres:
        condition: service_healthy
      postgres_test:
        condition: service_healthy
    restart: always

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: kolesa_user_service
    ports:
      - "8081:8081"
    env_file:
      - ./user-service/.env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: kolesa
      JWT_SECRET: "NURBOL"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  car-service:
    build:
      context: .
      dockerfile: car-service/Dockerfile
    container_name: kolesa_car_service
    ports:
      - "8082:8082"
    env_file:
      - ./car-service/.env
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: kolesa
      JWT_SECRET: "NURBOL"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
  postgres_test_data:
